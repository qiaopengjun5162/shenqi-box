/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
} from "@solana/kit";

export type NftMetadataUpdated = {
  nftMint: Address;
  field: string;
  value: string;
};

export type NftMetadataUpdatedArgs = NftMetadataUpdated;

export function getNftMetadataUpdatedEncoder(): Encoder<NftMetadataUpdatedArgs> {
  return getStructEncoder([
    ["nftMint", getAddressEncoder()],
    ["field", addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ["value", addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
  ]);
}

export function getNftMetadataUpdatedDecoder(): Decoder<NftMetadataUpdated> {
  return getStructDecoder([
    ["nftMint", getAddressDecoder()],
    ["field", addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ["value", addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
  ]);
}

export function getNftMetadataUpdatedCodec(): Codec<
  NftMetadataUpdatedArgs,
  NftMetadataUpdated
> {
  return combineCodec(
    getNftMetadataUpdatedEncoder(),
    getNftMetadataUpdatedDecoder(),
  );
}
